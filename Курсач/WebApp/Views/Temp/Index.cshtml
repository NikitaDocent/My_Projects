@model IEnumerable<WebPL.Model.ItemViewModel>
@{
    ViewBag.Title = "Всегда готов";
}

<div class="jumbotron">
    <h1>ASP.NET</h1>
    <p class="lead">ASP.NET is a free web framework for building great Web sites and Web applications using HTML, CSS, and JavaScript.</p>
    <p><a href="https://asp.net" class="btn btn-primary btn-lg">Learn more &raquo;</a></p>
</div>
<div class="row">
    <div class="col-md-4">
        <h2>Getting started</h2>
        <p>
            ASP.NET Web API is a framework that makes it easy to build HTTP services that reach
            a broad range of clients, including browsers and mobile devices. ASP.NET Web API
            is an ideal platform for building RESTful applications on the .NET Framework.
        </p>
        <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301870">Learn more &raquo;</a></p>
    </div>
    <div class="col-md-4">
        <h2>Get more libraries</h2>
        <p>NuGet is a free Visual Studio extension that makes it easy to add, remove, and update libraries and tools in Visual Studio projects.</p>
        <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301871">Learn more &raquo;</a></p>
    </div>
    <div class="col-md-4">
        <h2>Web Hosting</h2>
        <p>You can easily find a web hosting company that offers the right mix of features and price for your applications.</p>
        <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301872">Learn more &raquo;</a></p>
    </div>
</div>

<h2>А я ебу собак</h2>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Surname)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Password)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Surname)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Password)
            </td>


        </tr>
    }

</table>
<div>
    <p>
        <b>Ваше имя:</b><br>
        <input id="name" type="text" size="40">
    </p>
    <p>
        <b>Ваше имя:</b><br>
        <input id="surname" type="text" size="40">
    </p>
    <p>
        <b>Ваше имя:</b><br>
        <input id="email" type="text" size="40">
    </p>
    <p>
        <b>Ваше имя:</b><br>
        <input id="telnumb" type="text" size="40">
    </p>
    <p>
        <b>Ваше имя:</b><br>
        <input id="password" type="text" size="40">
    </p>

    <p>
        <input type="submit" onclick="AddExpo()" value="Отправить">
        <input type="reset" value="Очистить">
    </p>
</div>
<script src="~/Scripts/jquery-3.3.1.js"></script>
<script src="/Scripts/respond.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js"></script>


<script type="text/javascript">
    
    function AddExpo() {
       var UsersViewModel = {
        Name: $('#name').val(),
        Surname: $('#surname').val(),
        Email: $('#email').val(),
        TelNumb: $('#telnumb').val(),
        Password: $('#password').val()
    }


        $.ajax({
            url: "../api/Values",
            type: "POST", dataType: "JSON",
            data: JSON.stringify(UsersViewModel),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                alert("Добавлено")

            },
            error: function (error) {
                alert(error.responseText);
            }


        });

    }

</script>